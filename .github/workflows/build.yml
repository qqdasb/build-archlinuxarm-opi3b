name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - name: Prepare
      run: |
        sudo apt update
        sudo apt install build-essential openssl pkg-config libssl-dev libncurses5-dev pkg-config minizip libelf-dev flex bison  libc6-dev libidn11-dev rsync bc liblz4-tool gcc-aarch64-linux-gnu dpkg-dev dpkg git qemu-user-static
        wget https://github.com/qqdasb/my-files/raw/master/linux-rk35xx-legacy.config
        git clone https://github.com/armbian/linux-rockchip/
        mv linux-rk35xx-legacy.config linux-rockchip/.config
        wget http://os.archlinuxarm.org/os/ArchLinuxARM-aarch64-latest.tar.gz
        dd if=/dev/zero of=archlinux.img bs=3G count=6
        mkfs.ext4 archlinux.img
        mkdir arch
        tar xvf ArchLinuxARM-aarch64-latest.tar.gz -C arch
        sudo cp /etc/resolv.conf arch/etc/resolv.conf
        sudo mount --bind /dev arch/dev
        sudo mount -t devpts devpts arch/dev/pts -o gid=5,mode=620
        sudo mount -t proc proc arch/proc
        sudo mount -t sysfs sysfs arch/sys
        sudo mount -t tmpfs tmpfs arch/run
    - name: Build Kernel
      run: |
        cd linux-rockchip
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)
    - name: Build rootfs
      run: |
        sudo chroot arch pacman-key --init
        sudo chroot arch pacman-key --populate
        sudo chroot arch pacman -Syyu
        sudo chroot arch pacman -S make base-devel git sudo networkmanager pulseaudio-bluetooth bluez
        sudo chroot arch pacman -R linux-arm64 linux-firmware
        sudo chroot arch git clone https://github.com/armbian/firmware
        sudo chroot arch mv firmware /usr/lib/
        sudo chroot arch ldconfig
        sudo chroot arch 
        sudo chroot arch 
        sudo chroot arch 
        sudo chroot arch ls /usr/lib/modules && ls /boot
        sudo chroot arch mkinitcpio --generate /boot/initrd.img- --kernel 
        sudo umount ~/workspace/arch/run
        sudo umount arch/sys
        sudo umount arch/proc
        sudo umount arch/dev/pts
        sudo umount arch/dev
    - name: Build image
      run: |
        mkdir rootfs
        sudo mount archlinux.img rootfs/
        sudo cp -rfp arch/*  rootfs/
        sudo umount rootfs/
        e2fsck -p -f archlinux.img
        resize2fs -M archlinux.img
